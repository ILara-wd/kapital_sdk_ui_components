plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlinx-serialization'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'io.gitlab.arturbosch.detekt'
}
ext {
    ktor_version = "1.6.3"
    hilt_version = "2.44"
    lifecycle_version = "2.4.0"
    archLifecycleVersion = '2.2.0'
    fragmentKtxVersion = '1.3.6'
    fragmentKtxVersion = '1.3.6'
    fragmentKtxVersion = '1.3.6'
}

android {
    namespace 'com.Kapital.KapitalApp'
    compileSdk 33

    defaultConfig {
        minSdk 26
        targetSdk 33
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        buildConfig = true
        compose true
    }

    signingConfigs {
        //release {
        //    keyAlias "keyAlias"
        //    keyPassword "keyPassword"
        //    storeFile file(System.getenv("HOME") + "/keystores/KapitalKeyStore")
        //    storePassword "storePassword"
        //}
    }

    flavorDimensions "version"
    productFlavors {
        MX {
            dimension "version"
            versionCode 1
            versionName "1.0"
            applicationId "com.Kapital.KapitalApp"
            buildConfigField "String", "COUNTRY", "\".mx\""
        }
        CO {
            dimension "version"
            versionCode 1
            versionName "1.0"
            applicationId "com.app.kapital"
            buildConfigField "String", "COUNTRY", "\".cc\""
        }
    }

    buildTypes {
        release {
            manifestPlaceholders["deep_link_host"] = "kapital"
            //signingConfig signingConfigs.release
            resValue "string", "app_name", "Kapital"
            def domain = "api.kapital"
            debuggable false
            //minifyEnabled true
            //shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://$domain\""
            //manifestPlaceholders = [
            //        appIcon     : "@mipmap/ic_launcher",
            //        appIconRound: "@mipmap/ic_launcher"
            //]
        }
        debug {
            manifestPlaceholders["deep_link_host"] = "kapital"
            resValue "string", "app_name", "Kapital Dev"
            def domain = "develop-api.kapital"
            buildConfigField "String", "BASE_URL", "\"https://$domain\""
            //minifyEnabled true
            debuggable true
            //manifestPlaceholders = [
            //        appIcon     : "@drawable/ic_launcher_dev",
            //        appIconRound: "@drawable/ic_launcher_dev"
            //]
        }
        qa {
            manifestPlaceholders["deep_link_host"] = "kapital"
            //signingConfig signingConfigs.release
            resValue "string", "app_name", "Kapital QA"
            def domain = "sandbox-api.kapital"
            buildConfigField "String", "BASE_URL", "\"https://$domain\""
            //minifyEnabled true
            debuggable false
            //manifestPlaceholders = [
            //        appIcon     : "@drawable/ic_launcher_qa",
            //        appIconRound: "@drawable/ic_launcher_qa"
            //]
        }
    }

    ndkVersion '25.1.8937393'
    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                def flavor = variant.name
                def versionName = variant.versionName
                def versionCode = variant.versionCode
                outputFileName = "Kapital_${flavor}_${versionName}_V${versionCode}.apk"
            }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    kapt {
        correctErrorTypes true
    }
    testOptions {
        unitTests.includeAndroidResources = true
    }
    packagingOptions {
        exclude("META-INF/DEPENDENCIES.txt")
        exclude("META-INF/LICENSE.txt")
        exclude("META-INF/NOTICE.txt")
        exclude("META-INF/NOTICE")
        exclude("META-INF/LICENSE")
        exclude("META-INF/DEPENDENCIES")
        exclude("META-INF/notice.txt")
        exclude("META-INF/license.txt")
        exclude("META-INF/dependencies.txt")
        exclude("META-INF/LGPL2.1")
        resources {
            excludes += "/META-INF/{AL2.0,LGPL2.1}"
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // Android Test
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test:core:1.5.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"
    androidTestImplementation "androidx.test:runner:1.5.2"
    implementation 'androidx.test.espresso:espresso-accessibility:3.5.1'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.1.0'
    implementation 'com.google.firebase:firebase-messaging:17.0.0'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.9.7'

    // Ktor
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1'
    implementation 'io.ktor:ktor-client-serialization:1.5.0'
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"

    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    //Compose
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    //Charts
    implementation 'co.yml:ycharts:2.1.0'

    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    kapt "androidx.lifecycle:lifecycle-compiler:$archLifecycleVersion"

    implementation 'com.google.accompanist:accompanist-navigation-material:0.23.1'
    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:${hilt_version}"
    implementation "androidx.navigation:navigation-compose:2.4.2"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    kapt "com.google.dagger:hilt-compiler:${hilt_version}"
    // For instrumentation tests
    androidTestImplementation "'com.google.dagger:hilt-android-testing:${hilt_version}"
    kaptAndroidTest "com.google.dagger:hilt-compiler:${hilt_version}"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:${hilt_version}"
    kaptTest "com.google.dagger:hilt-compiler:${hilt_version}"

    // Biometric
    implementation 'androidx.biometric:biometric-ktx:1.2.0-alpha05'

    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.32'

}
